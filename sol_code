// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

// Import the ERC20 interface
import "@openzeppelin/contracts/token/ERC20/IERC20.sol";

contract MultiSenderWithTokens {
    // Define the owner of the contract
    address private owner;

    // Define a modifier to restrict access to the owner only
    modifier onlyOwner() {
        require(
            msg.sender == owner,
            "Only the contract owner can execute this function."
        );
        _;
    }

    // Set the contract owner at deployment
    constructor() {
        owner = msg.sender;
    }

    // Function to send tokens to multiple addresses
    function sendMultipleTokens(
        address tokenAddress,
        address[] memory recipients,
        uint256[] memory amounts
    ) public payable {
        // Check if the recipients and amounts arrays have the same length
        require(
            recipients.length == amounts.length,
            "Recipients and amounts arrays must have the same length."
        );

        // Get the instance of the ERC20 token contract
        IERC20 token = IERC20(tokenAddress);

        // Iterate through the recipients and send the specified amounts
        for (uint256 i = 0; i < recipients.length; i++) {
            require(
                token.transferFrom(msg.sender, recipients[i], amounts[i]),
                "Token transfer failed."
            );
        }
    }

    // Function to send currencies to multiple addresses
    function sendMultipleCurrencies(
        address[] memory recipients,
        uint256[] memory amounts
    ) public payable {
        require(
            recipients.length == amounts.length,
            "Invalid recipients or amounts"
        );

        for (uint256 i = 0; i < recipients.length; i++) {
            payable(recipients[i]).transfer(amounts[i]);
        }
    }

    function getSenderBalance() public view returns (uint256) {
        return payable(address(msg.sender)).balance;
    }

    // Function to withdraw any ERC20 tokens accidentally sent to this contract
    function withdrawTokens(address tokenAddress) public onlyOwner {
        IERC20 token = IERC20(tokenAddress);
        uint256 balance = token.balanceOf(address(this));
        require(
            token.transfer(msg.sender, balance),
            "Token withdrawal failed."
        );
    }
}
